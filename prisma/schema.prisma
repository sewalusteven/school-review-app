
generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  schoolReviews SchoolReview[]
}


model School {
  id Int @id @default(autoincrement())
  name String
  address String?
  district District @relation(fields: [districtId], references: [id])
  districtId Int
  about String?
  history String?
  phoneNumber String? @db.VarChar(25)
  email String? @unique
  curriculumId Int?
  curriculum Curriculum? @relation(fields: [curriculumId], references: [id])
  academicLevelId Int?
  academicLevel AcademicLevel? @relation(fields: [academicLevelId], references: [id])
  photos SchoolPhoto[]
  reviews SchoolReview[]
  subjects SchoolSubject[]
  createdAt DateTime @default(now())
  deletedAt DateTime?

}

model SchoolReview {
  id Int @id @default(autoincrement())
  title String @db.VarChar(50)
  review String @db.Text
  rating Int
  user User? @relation(fields: [userId], references: [id])
  userId Int?
  schoolId Int
  school School @relation(fields: [schoolId], references: [id])
  createdAt DateTime @default(now())
  deletedAt DateTime?

}

model SchoolPhoto {
  id Int @id @default(autoincrement())
  path String
  type PhotoType @default(General)
  schoolId Int?
  school School? @relation(fields: [schoolId], references: [id])
  createdAt DateTime @default(now())
}

model AcademicLevel {
  id Int @id @default(autoincrement())
  level String
  schools School[]
  subjects Subject[]
  curriculumId Int?
  curriculum Curriculum? @relation(fields: [curriculumId], references: [id])
}

model Curriculum {
  id Int @id @default(autoincrement())
  name String
  description String?
  schools School[]
  subjects Subject[]
  levels AcademicLevel[]
}

model Subject {
  id Int @id @default(autoincrement())
  curriculumId Int?
  curriculum Curriculum? @relation(fields: [curriculumId], references: [id])
  subject String
  academicLevelId Int?
  academicLevel AcademicLevel? @relation(fields: [academicLevelId], references: [id])
  schoolsAttached SchoolSubject[]
}

model SchoolSubject {
  id Int @id @default(autoincrement())
  schoolId Int
  subjectId Int
  school School @relation(fields: [schoolId], references: [id])
  subject Subject @relation(fields: [subjectId], references: [id])
}

model District {
  id Int @id @default(autoincrement())
  name String
  region String?
  schools School[]
}

enum PhotoType {
  Wallpaper
  Thumb
  General
}

